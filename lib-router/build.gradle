apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    compileOnly 'com.leeiidesu:sdk-core:1.0.4'
    compileOnly 'com.alibaba:arouter-api:1.2.4'
}

//test 打入源码
tasks.withType(Jar) { jarTask ->
    if (jarTask.name == 'packageReleaseJar') {
        jarTask.from android.sourceSets.main.java.srcDirs
    }
}

// 进行数字签名
signing {
    required { false }
    sign configurations.archives
}

// type显示指定任务类型或任务, 这里指定要执行Javadoc这个task,这个task在gradle中已经定义
task androidJavadocs(type: Javadoc) {
    // 设置源码所在的位置
    source = android.sourceSets.main.java.sourceFiles
}

// 生成javadoc.jar
task androidJavadocsJar(type: Jar) {
    // 指定文档名称
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

// 生成sources.jar
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

// 产生相关配置文件的任务
artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

tasks.create('uploadRouterManager', Upload.class) {
    configuration = project.configurations.archives
    group = 'upload'
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: 'http://leeiidesu.com/nexus/content/repositories/releases/') {
            authentication(userName: "${username}", password: "${password}")
        }
        pom.version = '1.0.3'
        pom.artifactId = 'router-service'
        pom.groupId = 'com.leeiidesu'
        pom.name = project.name
        pom.packaging = "aar"
    }
}

